stages:
  - build
  - test
  - deploy

variables:
  IMAGE_TAG: "$CI_COMMIT_SHA"  # Using the commit SHA to ensure unique tags
  REGISTRY: docker.io
  IMAGE_NAME: tejirih/helloworld

# Build the Docker image
build:
  stage: build
  script:
    - echo "REGISTRY is $REGISTRY"  # Debugging line to check if REGISTRY is set correctly
    - echo "Logging in to Docker..."
      #    - echo $DOCKER_REGISTRY_PASSWORD | docker login -u $DOCKER_REGISTRY_USER --password-stdin $REGISTRY
      #    - docker login -u $DOCKER_REGISTRY_USER -p $DOCKER_REGISTRY_PASSWORD $REGISTRY  # Authenticate with Docker
    - docker logout
    - echo $DOCKER_REGISTRY_PASSWORD | docker login -u $DOCKER_REGISTRY_USER --password-stdin $REGISTRY
    - echo "Building Docker image..."
    - docker build -t $IMAGE_NAME:$IMAGE_TAG -t $IMAGE_NAME:latest .
    - docker push $IMAGE_NAME:$IMAGE_TAG
    - docker push $IMAGE_NAME:latest

# Test the application (run python directly)
test:
  stage: test
  image: python:3.9-slim
  script:
    - echo "Running Python script..."
    - python -m py_compile helloworld.py
  only:
    - main

# Deploy to Kubernetes
deploy:
  stage: deploy
  script:
    - echo "Deploying to Kubernetes..."
    - kubectl apply -f k8s/deployment.yaml
    - kubectl set image deployment/helloworld-deployment helloworld=$IMAGE_NAME:$IMAGE_TAG -n backend
  only:
    - main

