name: CI Pipeline

on:
  push:
    branches:
      - main

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        sudo apt-get install -y kubectl

    - name: Trigger Orchestration App to manage test pod
      run: |
        python3 -c "
        import asyncio
        import json
        import websockets

        async def trigger_orchestration():
            async with websockets.connect('ws://51.20.124.73:8080/ws') as websocket:
                commit_data = json.dumps({'commit_id': '${{ github.sha }}'})
                await websocket.send(commit_data)
                response = await websocket.recv()
                print('Response from Orchestration App:', response)

        asyncio.run(trigger_orchestration())
        "

    - name: Deploy to production (if tests pass)
      if: success()  # Only trigger the deployment if tests passed
      run: |
        kubectl apply -f production-pod.yaml  # Apply the dynamic pod config to deploy the code
        kubectl wait --for=condition=ready pod/production-pod  # Wait for the pod to be ready
        kubectl logs production-pod  # Retrieve logs from the pod to confirm it ran successfully
